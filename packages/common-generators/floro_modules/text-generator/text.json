{
  "locales": {
    "EN": {
      "localeCode": "EN",
      "name": "English",
      "defaultFallbackCode": null,
      "isGlobalDefault": true
    },
    "ZH": {
      "localeCode": "ZH",
      "name": "Chinese",
      "defaultFallbackCode": "EN",
      "isGlobalDefault": false
    }
  },
  "localizedPhraseKeys": {
    "EN": {
      "about.bringing_it_all_together_part_1": {
        "phraseKey": "about.bringing_it_all_together_part_1",
        "variables": {},
        "links": {
          "CRDT Link": {
            "displayValue": [
              {
                "children": [],
                "content": "Conflict Free Replicated Data Types",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "CRDT Link",
            "href": [
              {
                "type": "text",
                "content": "https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type"
              }
            ]
          },
          "Git Merge Link": {
            "displayValue": [
              {
                "children": [],
                "content": "merge algorithm here",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "Git Merge Link",
            "href": [
              {
                "type": "text",
                "content": "https://github.com/florophore/floro/blob/main/src/sequenceoperations.ts#L294"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Unfortunately, there isn't a lot of great content that comprehensively covers the sequence merging cases ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " deals with. There are some similar problems that come up in ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{CRDT Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", however, they're divergent enough from our use-case that it's probably best for us to explain merging ourselves. With that said, this section is going to be quite a bit more technical than the previous sections. To add to the confusion, there are two distinct types of merges that occur in version control, that we need to delineate between.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The first type of merging is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "merging of sequences",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". We will be covering that in this section. The second type of merging is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "merging of the commit trees",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", which focuses on how commit graphs are merged. We will cover how ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " handles commit tree merging in the next section.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", like most version control systems, uses a variant of three-way merging, you can see the implementation of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "'s ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{Git Merge Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.bringing_it_all_together_title": {
        "phraseKey": "about.bringing_it_all_together_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Bringing it all together",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_7": {
        "phraseKey": "about.whats_the_difference_part_7",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "And that's the way that plugin diffing really works. While the user interfaces with the plugin via a user interface and alters the plugin's state tree through the GUI, the plugin interfaces with ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " through its keys. In fact all that is communicated to a plugin about a diff, is which keys were removed and which keys were added.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The idea that all a document diff requires is two views, the before, and the after, as well as the keys that were removed from the before state and the keys that were to the after state is the fundamental idea of document diffing.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "In the next section we discuss merging and data granularity. One key thing to know at this point, is that if something can be diffed (meaningfully) then it can also be merged (meaningfully)... even when conflicts arise.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_6": {
        "phraseKey": "about.whats_the_difference_part_6",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "We should now be able to see this diff far more easily in our spreadsheet interface!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_5": {
        "phraseKey": "about.whats_the_difference_part_5",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "To see the diff we're going to change the colors that are highlighted. Instead of highlighting the key relationships of the plugins, we highlight the keys that were ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "removed from the before state",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and the keys that were ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "added to the after state.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_4": {
        "phraseKey": "about.whats_the_difference_part_4",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "If we imagine these two states, in their key value form it becomes a lot easier to see how we could actually diff them. If we just imagine the keys of the spreadsheets above, we see the two states would be the following",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Before Keys -> After Keys",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_different_part_3": {
        "phraseKey": "about.whats_the_different_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Finally, we can return back to our Localization example to see how we can apply diffing to our plugin states. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The big philosophical question in diffing is how do you produce a meaningful diff? ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Unfortunately, diffing documents is highly subjective to the task at hand. However, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a couple of tricks for making good diffs easy for plugin developers to create.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "First let's think about the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "and ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "after ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "states of our localization document.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Before State  --",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Δ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "-> After State",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_blurb_2": {
        "phraseKey": "about.whats_the_difference_blurb_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The key thing to know about LCS, is that the opposite of the LCS is the diff, which makes sense when you think about it for a moment. The LCS tells us what is the same between two sequences, by comparing the LCS to the before sequence and after sequence, we can easily determine what was ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "removed from the ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sequence",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and what was ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "added to the ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "after",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sequence",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To apply a diff is a two step process. Staring with the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before sequence:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [],
                    "content": "We remove the removed characters in the diff from the ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "before sequence",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ", which gives us the LCS.",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Next, we add the added characters in the diff to the LCS, which gives us the ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "after sequence!",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "content": "",
            "type": "ol",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The diff calculator below demonstrates this process.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_blurb_1": {
        "phraseKey": "about.whats_the_difference_blurb_1",
        "variables": {},
        "links": {
          "Longest Common Subsequence": {
            "displayValue": [
              {
                "children": [],
                "content": "Longest Common Subsequence",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "Longest Common Subsequence",
            "href": [
              {
                "type": "text",
                "content": "https://en.wikipedia.org/wiki/Longest_common_subsequence"
              }
            ]
          },
          "YouTube Link": {
            "displayValue": [
              {
                "children": [],
                "content": "(we liked this one)",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "YouTube Link",
            "href": [
              {
                "type": "text",
                "content": "https://www.youtube.com/watch?v=P-mMvhfJhu8"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " wouldn't be much of a version control system if it didn't have diffs. But before explaining how diffs work in ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", it's best to take a step back and do a quick overview of diffing in general.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Diffing is the process of describing how one sequence transforms into a different sequence. Typically diffing involves finding the most concise way to transform between the two sequences. For sake of consistency, we will be discussing the two states of a diff as the \"before\" state and the \"after\" state. Although there is no real direction in diffing.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The algorithm used for diffing is the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{Longest Common Subsequence}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " or LCS algorithm. There's a plethora of YouTube videos giving explanations of how to find the LCS for two sequences ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{YouTube Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", so we will spare you. However, to help build intuition for the algorithm, we've provided you an LCS string calculator that delimits on characters. Feel free to type around and see how the LCS changes, when you change either of the strings.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_title": {
        "phraseKey": "about.whats_the_difference_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Whats the difference ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Δ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "?",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_its_all_related_part_3": {
        "phraseKey": "about.how_its_all_related_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The above image illustrates how cascading enforces bounded sets. Since Translations are bounded by Languages (due to the primary key of Translations being a reference to Languages), we can guarantee that for every LocalizationKey element, for each of its Translations element there will always be an element with a reference to each Language element. This becomes particularly important when we get into merging states, which necessitates cascading states.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Conceptually, we've now created for ourselves, what is essentially an excel spreadsheet.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_is_all_related_part_2": {
        "phraseKey": "about.how_it_is_all_related_part_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "If you're overwhelmed by this change, don't be. It's actually not nearly as complicated as it may look at first glance. If we look in our Translations data structure, you'll notice we abandoned our \"Locale\" property, which previously served as our primary key. We updated our data structure to now use a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "reference",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " as a primary key.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "We also set a cascading option \"onDelete\" to \"delete\", on our ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "for the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "LanguageReference",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " property. The alternative cascading delete option value is \"nullify\". You probably can guess the difference at this point but if the \"onDelete\" value of a reference type is \"delete\", the set element containing that reference will be deleted, when the reference is deleted. For example, if we were to remove the Languages' element with the Code equal to \"ZH\" from the Languages list, our Translation element with the reference ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(Languages).Code<ZH>,",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " would also be removed. However, if the \"onDelete\" property were set to \"nullify\", our Translation element would not be removed, we would be left will a null pointer though (ie. the value of LanguageReference would be set to equal to null). It is important to note that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "nullifying our reference is not possible in this example, since the LanguageReference property is the primary key of the Translations set.",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "There's actually one more cascading behavior not commonly recognized in the world of relational databases that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " heavily utilizes, which is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "expanding a set by the boundaries of another set",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Imagine we wanted to add a new language (Spanish) to our plugin. If this were a relational database, we might add a new column \"Spanish\" to our Languages' table. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a slightly different way of handling this relationship. We specify a property in our schema, that our set is a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "bounded set, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "by writing \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "bounded",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\": ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "true",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "This only works, when the primary key of our set is a reference to another set it can be bounded by.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "At this time ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " cannot bind sets to other nested sets, only root-level",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sets",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Once we add Spanish to our language list, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " will automatically cascade all of the LocalizedKeys in the plugins state to include a reference to Spanish as well.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Bounded Cascading:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_is_all_related_blurb_1": {
        "phraseKey": "about.how_it_is_all_related_blurb_1",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Earlier we mentioned that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " supports relationships between the substructures of a plugin's state. How it accomplishes this is through references. The keys of the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key-value ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "pairs are the actual pointer values in references. While this syntax could be used to point to any structure in a tree-state, it only makes sense to hold references to the elements of a set.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To further explain, we're going to build upon our prior example of our LocalizedKeys plugin. First we're going to refactor our schema to include a second set called \"Languages\". In this example, we're syntactically treating Languages as a separate plugin. However, it is perfectly fine to have multiple root level sets in the same plugin.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it's_all_related": {
        "phraseKey": "about.how_it's_all_related",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "It's all related 🍄",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_3": {
        "phraseKey": "about.things_change_blurb_3",
        "variables": {},
        "links": {
          "unit test": {
            "displayValue": [
              {
                "children": [],
                "content": "this is a useful unit test to examine",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "unit test",
            "href": [
              {
                "type": "text",
                "content": "https://github.com/florophore/floro/blob/main/tests/plugins.test.ts#L3608"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Disclaimer: Additional information from the plugin schema(s), which is not illustrated in either image above, is required for this to be true. If you are interested in a full example, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{unit test}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "This is a really powerful trick, since what it allows us to do is make a certain assumption about our content. If we managed to deploy a version of our application that was built with \"Version 1\" of our ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " state, we could safely deploy updated versions of our app to versions 2 or versions 3 with full confidence that we are not causing any bugs without having to recompile our entire application. If however, we were to swap out our content from version 1, to version 4, we would likely crash if a user ever visited a page calling the key ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\"Welcome Hero\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " for the \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Chinese",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" version of the app. We therefore would not ever deploy version 4.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "By performing this simple set check, we've essentially done the work of a (",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "relatively unoptimized",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ") compiler on our content.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_2": {
        "phraseKey": "about.things_change_blurb_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "So now our question is actually pretty simple. We want to know if we can safely update version 1 to each new version N (version 2, version 3, and version 4). To do this we are going to ask a simple question, \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "are the keys of version 1 all present in the subsequent version's key list?\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "We're going to use two tiny pieces of math (set) notation here, \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "⊆",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" and\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "⊄",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "If you've never seen these symbols before or need a quick refresher, they're quite simple.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A ⊆ B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", says ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A is a subset of B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "For example, if A = {1, 2, 3} and B = {1, 2, 3, 4}, we would say that A is a subset of B, since 1, 2, and 3 are all present elements in B.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A ⊄ B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", says ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A is NOT a subset of B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "For example, if A = {1, 2, 3} and B = {1, 3, 4}, we would say that A is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "NOT",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " a subset of B, since the element 2 is not present in the elements of B.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "So how does this connect back to generating code and type safety? Well if we know the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", we are able to perform type compatibility checks between plugin states, simply by asking the question stated above.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_1": {
        "phraseKey": "about.things_change_blurb_1",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "We will get to the version control side of things soon. We promise! The thing we're really interested in figuring out at this point is if there is anything we can universally guarantee about the code we generate from a generator. If we look back at our first example we can observe something kind of neat now. We can actually determine if an update to the plugin state, is type-compatible with our current content, by looking at the keys of our KV List alone.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To show this, we have to consider three types of changes.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [],
                    "content": "Addition",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will add a new Translation phrase to our Localized Keys ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Logout\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ", and provide English and Chinese Translations for the new phrase",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Update Value",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will change the content value of our Localized Key for the phrase ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome Hero\" ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "from the phrase ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome to our website\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " to ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome to our app\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ".",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Removal",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will remove the Chinese translation for our ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome Hero\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " translation",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "content": "",
            "type": "ol",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_title": {
        "phraseKey": "about.things_change_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "When things change...",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_floro_works_title": {
        "phraseKey": "about.how_floro_works_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "How floro works",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb": {
        "phraseKey": "about.how_it_works_blurb",
        "variables": {},
        "links": {
          "redux": {
            "displayValue": [
              {
                "children": [],
                "content": "redux",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "redux",
            "href": [
              {
                "type": "text",
                "content": "https://redux.js.org/"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a few magic tricks up it's sleeve that allow it to do some pretty remarkable things. Before explaining the low-level details of how ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " works, the most important thing to understand about ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is that it uses something called ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "dependent types",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " to derive ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "well-typed",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " content.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "While ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "git",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repositories are composed of files, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repositories are composed of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugins ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "and their corresponding ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "state stores.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Plugins are small UI applications directly managed by ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". If you are familiar with ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{redux}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", you can think of a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repository as a global redux state store composed of a subset of plugin state stores. The goal of each plugin is to ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "do one thing and do it well",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Each plugin defines a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "schema, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "which describes the type of the content persisted by that plugin. Plugins are able to read and write to an external upstream plugin's store when the plugin requires the upstream plugin as a dependency. In this sense, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugins behave both like applications as well as programming modules.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Plugins can also hold relationships between their internal store structures as well as the external structures of upstream plugins. Plugin developers can define cascading behaviors in a plugin's schema. This makes plugins particularly useful for centralizing relational content. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Ultimately, a plugin's state is meant to be consumed as input to a program called a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "generator.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Generators transform the state of a plugin (usually into a type of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "static map",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "). This generated code can then be consumed by an application. A generator's output is language and environment agnostic. In the example below, we demonstrate how a Typescript output may be generated from the state of a simple localization plugin. It's important to note, there is nothing fundamental about ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " that requires the generated code to be Typescript or Javascript. Plugins and generators are not directly coupled. A plugin may have multiple generators and generators may take multiple plugin states as input. Generators can produce any type of output.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "An example of a typical ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " pipeline:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Plugin Schema -> Plugin State -> Generated Code",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_2": {
        "phraseKey": "about.how_it_works_blurb_part_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The core idea of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is that by exposing the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " to the system, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is able to exploit the knowledge of a schema to diff and merge any document that has a schema conforming to the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " schema language.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " does not really ever see the plugin state as a tree state. Instead it ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "treats plugin state as an ordered list of key value pairs. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "If you have any experience working on merge technology, you likely know that once you can describe a data structure as an ordered list or ordered set, you can merge it!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Essentially, on every state change, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " serializes a repository's ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "tree state (plugin state)",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " into an intermediary ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "KV state.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " can convert in both directions between the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "tree state",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "KV state ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of a given plugin",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Below is an illustration of the two state representations for our example above.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Plugin Schema: KV State <-> Tree State",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_3": {
        "phraseKey": "about.how_it_works_blurb_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Disclaimer: This is not exactly the syntax floro uses and is a simplification of the actual floro syntax (it has some small inaccuracies).",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "So what is this bizarre path key syntax?",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_4": {
        "phraseKey": "about.how_it_works_blurb_part_4",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "It's basically a path to the struct (the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "value ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key-value pair",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ") inside the tree-state representation.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " syntax is used to select from a specific ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin state store",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(LocalizedKeys)",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": true,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is the root for the plugin, so it gets wrapped by ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(<plugin-name>)",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Next we have this weird \".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Welcome Hero",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ">\" bit. What it basically says is look in the list (LocalizedKeys) and search for the first object with a property called \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" that has a value equal to \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Welcome Hero",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\". If you look in the plugin schema, you might notice that the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " property of the LocalizedKeys set has the property value pair ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\"isKey\": true. ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "You can think of this property as a primary key for that structure.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "At this point in the iteration, we've successfully traversed to the \"Welcome Hero\" struct. Next we select the \".Translations\" part of the path and have another list, this time with two structures at the current nesting level. Again, we see the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Value",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "> syntax, but this time with \".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Locale",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "English",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ">\". So we search the list for the first element with a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Locale",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " equal to ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "English.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "And that's it!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "All the Intermediate state representation is, is a list of",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " key-value pairs ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of the form:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "  ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ": ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "identity path,",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "  ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "value",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ":",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "object",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "}",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "By applying our list of ordered key pairs, we can reconstruct a state tree. Conversely, we can recreate any ordered key pair list, from any state tree.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "meta_tags.about": {
        "phraseKey": "meta_tags.about",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro | About",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.appearance": {
        "phraseKey": "front_page.appearance",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Appearance",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.get_help_and_contribute": {
        "phraseKey": "front_page.get_help_and_contribute",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "get help & contribute",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.install_the_cli": {
        "phraseKey": "front_page.install_the_cli",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "install the cli",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.download_desktop_client": {
        "phraseKey": "front_page.download_desktop_client",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "download the desktop client",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.subtext_of_tag_line": {
        "phraseKey": "front_page.subtext_of_tag_line",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is a distributed version control system for creating and managing interoperable static assets and templates",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.tag_line": {
        "phraseKey": "front_page.tag_line",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "git for the rest of your product team",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_consulting": {
        "phraseKey": "front_page.nav_consulting",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "consulting",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_foss": {
        "phraseKey": "front_page.nav_foss",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "foss",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_pricing": {
        "phraseKey": "front_page.nav_pricing",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "pricing",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_download": {
        "phraseKey": "front_page.nav_download",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "download",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_docs": {
        "phraseKey": "front_page.nav_docs",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "docs",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_about": {
        "phraseKey": "front_page.nav_about",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "about",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.terms_of_service": {
        "phraseKey": "components.terms_of_service",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "terms of service",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.privacy_policy": {
        "phraseKey": "components.privacy_policy",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "privacy policy",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.copyright": {
        "phraseKey": "components.copyright",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Copyright © 2023-present Cheqout Payments Inc & Floro Contributors",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.released_under_mit": {
        "phraseKey": "components.released_under_mit",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Released under the MIT License.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.copied": {
        "phraseKey": "components.copied",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "copied!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "main.hello_world": {
        "phraseKey": "main.hello_world",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Hello World from Floro!",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      }
    },
    "ZH": {
      "about.bringing_it_all_together_part_1": {
        "phraseKey": "about.bringing_it_all_together_part_1",
        "variables": {},
        "links": {
          "CRDT Link": {
            "displayValue": [
              {
                "children": [],
                "content": "Conflict Free Replicated Data Types",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "CRDT Link",
            "href": [
              {
                "type": "text",
                "content": "https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type"
              }
            ]
          },
          "Git Merge Link": {
            "displayValue": [
              {
                "children": [],
                "content": "merge algorithm here",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "Git Merge Link",
            "href": [
              {
                "type": "text",
                "content": "https://github.com/florophore/floro/blob/main/src/sequenceoperations.ts#L294"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Unfortunately, there isn't a lot of great content that comprehensively covers the sequence merging cases ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " deals with. There are some similar problems that come up in ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{CRDT Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", however, they're divergent enough from our use-case that it's probably best for us to explain merging ourselves. With that said, this section is going to be quite a bit more technical than the previous sections. To add to the confusion, there are two distinct types of merges that occur in version control, that we need to delineate between.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The first type of merging is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "merging of sequences",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". We will be covering that in this section. The second type of merging is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "merging of the commit trees",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", which focuses on how commit graphs are merged. We will cover how ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " handles commit tree merging in the next section.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", like most version control systems, uses a variant of three-way merging, you can see the implementation of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "'s ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{Git Merge Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.bringing_it_all_together_title": {
        "phraseKey": "about.bringing_it_all_together_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Bringing it all together",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_7": {
        "phraseKey": "about.whats_the_difference_part_7",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "And that's the way that plugin diffing really works. While the user interfaces with the plugin via a user interface and alters the plugin's state tree through the GUI, the plugin interfaces with ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " through its keys. In fact all that is communicated to a plugin about a diff, is which keys were removed and which keys were added.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The idea that all a document diff requires is two views, the before, and the after, as well as the keys that were removed from the before state and the keys that were to the after state is the fundamental idea of document diffing.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "In the next section we discuss merging and data granularity. One key thing to know at this point, is that if something can be diffed (meaningfully) then it can also be merged (meaningfully)... even when conflicts arise.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_6": {
        "phraseKey": "about.whats_the_difference_part_6",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "We should now be able to see this diff far more easily in our spreadsheet interface!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_5": {
        "phraseKey": "about.whats_the_difference_part_5",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "To see the diff we're going to change the colors that are highlighted. Instead of highlighting the key relationships of the plugins, we highlight the keys that were ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "removed from the before state",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and the keys that were ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "added to the after state.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_part_4": {
        "phraseKey": "about.whats_the_difference_part_4",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "If we imagine these two states, in their key value form it becomes a lot easier to see how we could actually diff them. If we just imagine the keys of the spreadsheets above, we see the two states would be the following",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Before Keys -> After Keys",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_different_part_3": {
        "phraseKey": "about.whats_the_different_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Finally, we can return back to our Localization example to see how we can apply diffing to our plugin states. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The big philosophical question in diffing is how do you produce a meaningful diff? ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Unfortunately, diffing documents is highly subjective to the task at hand. However, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a couple of tricks for making good diffs easy for plugin developers to create.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "First let's think about the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "and ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "after ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "states of our localization document.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Before State  --",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Δ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "-> After State",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_blurb_2": {
        "phraseKey": "about.whats_the_difference_blurb_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The key thing to know about LCS, is that the opposite of the LCS is the diff, which makes sense when you think about it for a moment. The LCS tells us what is the same between two sequences, by comparing the LCS to the before sequence and after sequence, we can easily determine what was ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "removed from the ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sequence",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and what was ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "added to the ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "after",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sequence",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To apply a diff is a two step process. Staring with the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "before sequence:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [],
                    "content": "We remove the removed characters in the diff from the ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "before sequence",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ", which gives us the LCS.",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Next, we add the added characters in the diff to the LCS, which gives us the ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "after sequence!",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "content": "",
            "type": "ol",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The diff calculator below demonstrates this process.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_blurb_1": {
        "phraseKey": "about.whats_the_difference_blurb_1",
        "variables": {},
        "links": {
          "Longest Common Subsequence": {
            "displayValue": [
              {
                "children": [],
                "content": "Longest Common Subsequence",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "Longest Common Subsequence",
            "href": [
              {
                "type": "text",
                "content": "https://en.wikipedia.org/wiki/Longest_common_subsequence"
              }
            ]
          },
          "YouTube Link": {
            "displayValue": [
              {
                "children": [],
                "content": "(we liked this one)",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "YouTube Link",
            "href": [
              {
                "type": "text",
                "content": "https://www.youtube.com/watch?v=P-mMvhfJhu8"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " wouldn't be much of a version control system if it didn't have diffs. But before explaining how diffs work in ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", it's best to take a step back and do a quick overview of diffing in general.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Diffing is the process of describing how one sequence transforms into a different sequence. Typically diffing involves finding the most concise way to transform between the two sequences. For sake of consistency, we will be discussing the two states of a diff as the \"before\" state and the \"after\" state. Although there is no real direction in diffing.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The algorithm used for diffing is the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{Longest Common Subsequence}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " or LCS algorithm. There's a plethora of YouTube videos giving explanations of how to find the LCS for two sequences ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{YouTube Link}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", so we will spare you. However, to help build intuition for the algorithm, we've provided you an LCS string calculator that delimits on characters. Feel free to type around and see how the LCS changes, when you change either of the strings.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.whats_the_difference_title": {
        "phraseKey": "about.whats_the_difference_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Whats the difference ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Δ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "?",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_its_all_related_part_3": {
        "phraseKey": "about.how_its_all_related_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The above image illustrates how cascading enforces bounded sets. Since Translations are bounded by Languages (due to the primary key of Translations being a reference to Languages), we can guarantee that for every LocalizationKey element, for each of its Translations element there will always be an element with a reference to each Language element. This becomes particularly important when we get into merging states, which necessitates cascading states.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Conceptually, we've now created for ourselves, what is essentially an excel spreadsheet.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_is_all_related_part_2": {
        "phraseKey": "about.how_it_is_all_related_part_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "If you're overwhelmed by this change, don't be. It's actually not nearly as complicated as it may look at first glance. If we look in our Translations data structure, you'll notice we abandoned our \"Locale\" property, which previously served as our primary key. We updated our data structure to now use a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "reference",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " as a primary key.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "We also set a cascading option \"onDelete\" to \"delete\", on our ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "for the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "LanguageReference",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " property. The alternative cascading delete option value is \"nullify\". You probably can guess the difference at this point but if the \"onDelete\" value of a reference type is \"delete\", the set element containing that reference will be deleted, when the reference is deleted. For example, if we were to remove the Languages' element with the Code equal to \"ZH\" from the Languages list, our Translation element with the reference ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(Languages).Code<ZH>,",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " would also be removed. However, if the \"onDelete\" property were set to \"nullify\", our Translation element would not be removed, we would be left will a null pointer though (ie. the value of LanguageReference would be set to equal to null). It is important to note that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "nullifying our reference is not possible in this example, since the LanguageReference property is the primary key of the Translations set.",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "There's actually one more cascading behavior not commonly recognized in the world of relational databases that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " heavily utilizes, which is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "expanding a set by the boundaries of another set",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Imagine we wanted to add a new language (Spanish) to our plugin. If this were a relational database, we might add a new column \"Spanish\" to our Languages' table. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a slightly different way of handling this relationship. We specify a property in our schema, that our set is a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "bounded set, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "by writing \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "bounded",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\": ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "true",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "This only works, when the primary key of our set is a reference to another set it can be bounded by.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "At this time ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " cannot bind sets to other nested sets, only root-level",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "sets",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Once we add Spanish to our language list, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " will automatically cascade all of the LocalizedKeys in the plugins state to include a reference to Spanish as well.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Bounded Cascading:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_is_all_related_blurb_1": {
        "phraseKey": "about.how_it_is_all_related_blurb_1",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Earlier we mentioned that ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " supports relationships between the substructures of a plugin's state. How it accomplishes this is through references. The keys of the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key-value ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "pairs are the actual pointer values in references. While this syntax could be used to point to any structure in a tree-state, it only makes sense to hold references to the elements of a set.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To further explain, we're going to build upon our prior example of our LocalizedKeys plugin. First we're going to refactor our schema to include a second set called \"Languages\". In this example, we're syntactically treating Languages as a separate plugin. However, it is perfectly fine to have multiple root level sets in the same plugin.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it's_all_related": {
        "phraseKey": "about.how_it's_all_related",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "It's all related 🍄",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_3": {
        "phraseKey": "about.things_change_blurb_3",
        "variables": {},
        "links": {
          "unit test": {
            "displayValue": [
              {
                "children": [],
                "content": "this is a useful unit test to examine",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "unit test",
            "href": [
              {
                "type": "text",
                "content": "https://github.com/florophore/floro/blob/main/tests/plugins.test.ts#L3608"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Disclaimer: Additional information from the plugin schema(s), which is not illustrated in either image above, is required for this to be true. If you are interested in a full example, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{unit test}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "This is a really powerful trick, since what it allows us to do is make a certain assumption about our content. If we managed to deploy a version of our application that was built with \"Version 1\" of our ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " state, we could safely deploy updated versions of our app to versions 2 or versions 3 with full confidence that we are not causing any bugs without having to recompile our entire application. If however, we were to swap out our content from version 1, to version 4, we would likely crash if a user ever visited a page calling the key ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\"Welcome Hero\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " for the \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Chinese",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" version of the app. We therefore would not ever deploy version 4.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "By performing this simple set check, we've essentially done the work of a (",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "relatively unoptimized",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ") compiler on our content.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_2": {
        "phraseKey": "about.things_change_blurb_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "So now our question is actually pretty simple. We want to know if we can safely update version 1 to each new version N (version 2, version 3, and version 4). To do this we are going to ask a simple question, \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "are the keys of version 1 all present in the subsequent version's key list?\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "We're going to use two tiny pieces of math (set) notation here, \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "⊆",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" and\"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "⊄",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "If you've never seen these symbols before or need a quick refresher, they're quite simple.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A ⊆ B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", says ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A is a subset of B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "For example, if A = {1, 2, 3} and B = {1, 2, 3, 4}, we would say that A is a subset of B, since 1, 2, and 3 are all present elements in B.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A ⊄ B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", says ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "A is NOT a subset of B",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "For example, if A = {1, 2, 3} and B = {1, 3, 4}, we would say that A is ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "NOT",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " a subset of B, since the element 2 is not present in the elements of B.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "So how does this connect back to generating code and type safety? Well if we know the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", we are able to perform type compatibility checks between plugin states, simply by asking the question stated above.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_blurb_1": {
        "phraseKey": "about.things_change_blurb_1",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "We will get to the version control side of things soon. We promise! The thing we're really interested in figuring out at this point is if there is anything we can universally guarantee about the code we generate from a generator. If we look back at our first example we can observe something kind of neat now. We can actually determine if an update to the plugin state, is type-compatible with our current content, by looking at the keys of our KV List alone.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "To show this, we have to consider three types of changes.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [],
                    "content": "Addition",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will add a new Translation phrase to our Localized Keys ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Logout\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ", and provide English and Chinese Translations for the new phrase",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Update Value",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will change the content value of our Localized Key for the phrase ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome Hero\" ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "from the phrase ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome to our website\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " to ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome to our app\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": ".",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              },
              {
                "children": [
                  {
                    "children": [],
                    "content": "Removal",
                    "type": "text",
                    "styles": {
                      "isBold": true,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " - We will remove the Chinese translation for our ",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": "\"Welcome Hero\"",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": true,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  },
                  {
                    "children": [],
                    "content": " translation",
                    "type": "text",
                    "styles": {
                      "isBold": false,
                      "isItalic": false,
                      "isUnderlined": false,
                      "isStrikethrough": false,
                      "isSuperscript": false,
                      "isSubscript": false
                    }
                  }
                ],
                "content": "",
                "type": "li",
                "styles": {
                  "isBold": false,
                  "isItalic": false,
                  "isUnderlined": false,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "content": "",
            "type": "ol",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.things_change_title": {
        "phraseKey": "about.things_change_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "When things change...",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_floro_works_title": {
        "phraseKey": "about.how_floro_works_title",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "How floro works",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb": {
        "phraseKey": "about.how_it_works_blurb",
        "variables": {},
        "links": {
          "redux": {
            "displayValue": [
              {
                "children": [],
                "content": "redux",
                "type": "text",
                "styles": {
                  "isBold": false,
                  "isItalic": true,
                  "isUnderlined": true,
                  "isStrikethrough": false,
                  "isSuperscript": false,
                  "isSubscript": false
                }
              }
            ],
            "linkName": "redux",
            "href": [
              {
                "type": "text",
                "content": "https://redux.js.org/"
              }
            ]
          }
        },
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " has a few magic tricks up it's sleeve that allow it to do some pretty remarkable things. Before explaining the low-level details of how ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " works, the most important thing to understand about ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is that it uses something called ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "dependent types",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " to derive ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "well-typed",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " content.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "While ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "git",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repositories are composed of files, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repositories are composed of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugins ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "and their corresponding ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "state stores.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Plugins are small UI applications directly managed by ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". If you are familiar with ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{redux}",
            "type": "link",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ", you can think of a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " repository as a global redux state store composed of a subset of plugin state stores. The goal of each plugin is to ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "do one thing and do it well",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Each plugin defines a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "schema, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "which describes the type of the content persisted by that plugin. Plugins are able to read and write to an external upstream plugin's store when the plugin requires the upstream plugin as a dependency. In this sense, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugins behave both like applications as well as programming modules.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Plugins can also hold relationships between their internal store structures as well as the external structures of upstream plugins. Plugin developers can define cascading behaviors in a plugin's schema. This makes plugins particularly useful for centralizing relational content. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Ultimately, a plugin's state is meant to be consumed as input to a program called a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "generator.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " Generators transform the state of a plugin (usually into a type of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "static map",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "). This generated code can then be consumed by an application. A generator's output is language and environment agnostic. In the example below, we demonstrate how a Typescript output may be generated from the state of a simple localization plugin. It's important to note, there is nothing fundamental about ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " that requires the generated code to be Typescript or Javascript. Plugins and generators are not directly coupled. A plugin may have multiple generators and generators may take multiple plugin states as input. Generators can produce any type of output.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "An example of a typical ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " pipeline:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Plugin Schema -> Plugin State -> Generated Code",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_2": {
        "phraseKey": "about.how_it_works_blurb_part_2",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "The core idea of ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is that by exposing the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin schema",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " to the system, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is able to exploit the knowledge of a schema to diff and merge any document that has a schema conforming to the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " schema language.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " does not really ever see the plugin state as a tree state. Instead it ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "treats plugin state as an ordered list of key value pairs. ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "If you have any experience working on merge technology, you likely know that once you can describe a data structure as an ordered list or ordered set, you can merge it!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Essentially, on every state change, ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " serializes a repository's ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "tree state (plugin state)",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " into an intermediary ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "KV state.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Floro",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " can convert in both directions between the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "tree state",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " and ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "KV state ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of a given plugin",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Below is an illustration of the two state representations for our example above.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Plugin Schema: KV State <-> Tree State",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_3": {
        "phraseKey": "about.how_it_works_blurb_part_3",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Disclaimer: This is not exactly the syntax floro uses and is a simplification of the actual floro syntax (it has some small inaccuracies).",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "So what is this bizarre path key syntax?",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "about.how_it_works_blurb_part_4": {
        "phraseKey": "about.how_it_works_blurb_part_4",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "It's basically a path to the struct (the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "value ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key-value pair",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ") inside the tree-state representation.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "The ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " syntax is used to select from a specific ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "plugin state store",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ". ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(LocalizedKeys)",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": true,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " is the root for the plugin, so it gets wrapped by ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "$(<plugin-name>)",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Next we have this weird \".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Welcome Hero",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ">\" bit. What it basically says is look in the list (LocalizedKeys) and search for the first object with a property called \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\" that has a value equal to \"",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Welcome Hero",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\". If you look in the plugin schema, you might notice that the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " property of the LocalizedKeys set has the property value pair ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\"isKey\": true. ",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "You can think of this property as a primary key for that structure.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "At this point in the iteration, we've successfully traversed to the \"Welcome Hero\" struct. Next we select the \".Translations\" part of the path and have another list, this time with two structures at the current nesting level. Again, we see the ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Value",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "> syntax, but this time with \".",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Locale",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "<",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "English",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ">\". So we search the list for the first element with a ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "Locale",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " equal to ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "English.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "And that's it!",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "All the Intermediate state representation is, is a list of",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " key-value pairs ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "of the form:",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "{",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "  ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "key",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ": ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "identity path,",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "  ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "value",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": ":",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": " ",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "object",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": true,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "}",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "By applying our list of ordered key pairs, we can reconstruct a state tree. Conversely, we can recreate any ordered key pair list, from any state tree.",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "meta_tags.about": {
        "phraseKey": "meta_tags.about",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Floro | 关于",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.appearance": {
        "phraseKey": "front_page.appearance",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "外观",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.get_help_and_contribute": {
        "phraseKey": "front_page.get_help_and_contribute",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "获取帮助并作出贡献",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.install_the_cli": {
        "phraseKey": "front_page.install_the_cli",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "安装CLI",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.download_desktop_client": {
        "phraseKey": "front_page.download_desktop_client",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "下载桌面客户端",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.subtext_of_tag_line": {
        "phraseKey": "front_page.subtext_of_tag_line",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "floro 是一个分布式版本控制系统，用于创建和管理可互操作的静态资产和模板",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.tag_line": {
        "phraseKey": "front_page.tag_line",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "为程式员以外所制造的",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "git",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_consulting": {
        "phraseKey": "front_page.nav_consulting",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "咨询",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_foss": {
        "phraseKey": "front_page.nav_foss",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "开源软件",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_pricing": {
        "phraseKey": "front_page.nav_pricing",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "定价",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_download": {
        "phraseKey": "front_page.nav_download",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "下载",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_docs": {
        "phraseKey": "front_page.nav_docs",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "文档",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "front_page.nav_about": {
        "phraseKey": "front_page.nav_about",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "关于",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.terms_of_service": {
        "phraseKey": "components.terms_of_service",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "服务条款",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.privacy_policy": {
        "phraseKey": "components.privacy_policy",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "隐私政策",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.copyright": {
        "phraseKey": "components.copyright",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "版权所有 © 2023-至今 Cheqout Payments Inc & Floro Contributors",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.released_under_mit": {
        "phraseKey": "components.released_under_mit",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "根据 MIT 许可发布。",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "components.copied": {
        "phraseKey": "components.copied",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "复制的！",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      },
      "main.hello_world": {
        "phraseKey": "main.hello_world",
        "variables": {},
        "links": {},
        "interpolations": {},
        "phrase": [
          {
            "children": [],
            "content": "Hello World from Floro!",
            "type": "text",
            "styles": {
              "isBold": true,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          },
          {
            "children": [],
            "content": "\n",
            "type": "text",
            "styles": {
              "isBold": false,
              "isItalic": false,
              "isUnderlined": false,
              "isStrikethrough": false,
              "isSuperscript": false,
              "isSubscript": false
            }
          }
        ]
      }
    }
  },
  "phraseKeyDebugInfo": {
    "about.bringing_it_all_together_part_1": {
      "groupName": "About",
      "phraseKey": "bringing it all together part 1"
    },
    "about.bringing_it_all_together_title": {
      "groupName": "About",
      "phraseKey": "bringing it all together title"
    },
    "about.whats_the_difference_part_7": {
      "groupName": "About",
      "phraseKey": "whats the difference part 7"
    },
    "about.whats_the_difference_part_6": {
      "groupName": "About",
      "phraseKey": "whats the difference part 6"
    },
    "about.whats_the_difference_part_5": {
      "groupName": "About",
      "phraseKey": "whats the difference part 5"
    },
    "about.whats_the_difference_part_4": {
      "groupName": "About",
      "phraseKey": "whats the difference part 4"
    },
    "about.whats_the_different_part_3": {
      "groupName": "About",
      "phraseKey": "whats the different part 3"
    },
    "about.whats_the_difference_blurb_2": {
      "groupName": "About",
      "phraseKey": "whats the difference blurb 2"
    },
    "about.whats_the_difference_blurb_1": {
      "groupName": "About",
      "phraseKey": "whats the difference blurb 1"
    },
    "about.whats_the_difference_title": {
      "groupName": "About",
      "phraseKey": "whats the difference title"
    },
    "about.how_its_all_related_part_3": {
      "groupName": "About",
      "phraseKey": "how its all related part 3"
    },
    "about.how_it_is_all_related_part_2": {
      "groupName": "About",
      "phraseKey": "how it is all related part 2"
    },
    "about.how_it_is_all_related_blurb_1": {
      "groupName": "About",
      "phraseKey": "how it is all related blurb 1"
    },
    "about.how_it's_all_related": {
      "groupName": "About",
      "phraseKey": "how it's all related"
    },
    "about.things_change_blurb_3": {
      "groupName": "About",
      "phraseKey": "things change blurb 3"
    },
    "about.things_change_blurb_2": {
      "groupName": "About",
      "phraseKey": "things change blurb 2"
    },
    "about.things_change_blurb_1": {
      "groupName": "About",
      "phraseKey": "things change blurb 1"
    },
    "about.things_change_title": {
      "groupName": "About",
      "phraseKey": "things change title"
    },
    "about.how_floro_works_title": {
      "groupName": "About",
      "phraseKey": "how floro works title"
    },
    "about.how_it_works_blurb": {
      "groupName": "About",
      "phraseKey": "how it works blurb"
    },
    "about.how_it_works_blurb_part_2": {
      "groupName": "About",
      "phraseKey": "how it works blurb part 2"
    },
    "about.how_it_works_blurb_part_3": {
      "groupName": "About",
      "phraseKey": "how it works blurb part 3"
    },
    "about.how_it_works_blurb_part_4": {
      "groupName": "About",
      "phraseKey": "how it works blurb part 4"
    },
    "meta_tags.about": {
      "groupName": "Meta Tags",
      "phraseKey": "about"
    },
    "front_page.appearance": {
      "groupName": "Front Page",
      "phraseKey": "appearance"
    },
    "front_page.get_help_and_contribute": {
      "groupName": "Front Page",
      "phraseKey": "get help and contribute"
    },
    "front_page.install_the_cli": {
      "groupName": "Front Page",
      "phraseKey": "install the cli"
    },
    "front_page.download_desktop_client": {
      "groupName": "Front Page",
      "phraseKey": "download desktop client"
    },
    "front_page.subtext_of_tag_line": {
      "groupName": "Front Page",
      "phraseKey": "subtext of tag line"
    },
    "front_page.tag_line": {
      "groupName": "Front Page",
      "phraseKey": "tag line"
    },
    "front_page.nav_consulting": {
      "groupName": "Front Page",
      "phraseKey": "nav consulting"
    },
    "front_page.nav_foss": {
      "groupName": "Front Page",
      "phraseKey": "nav foss"
    },
    "front_page.nav_pricing": {
      "groupName": "Front Page",
      "phraseKey": "nav pricing"
    },
    "front_page.nav_download": {
      "groupName": "Front Page",
      "phraseKey": "nav download"
    },
    "front_page.nav_docs": {
      "groupName": "Front Page",
      "phraseKey": "nav docs"
    },
    "front_page.nav_about": {
      "groupName": "Front Page",
      "phraseKey": "nav about"
    },
    "components.terms_of_service": {
      "groupName": "Components",
      "phraseKey": "terms of service"
    },
    "components.privacy_policy": {
      "groupName": "Components",
      "phraseKey": "privacy policy"
    },
    "components.copyright": {
      "groupName": "Components",
      "phraseKey": "copyright"
    },
    "components.released_under_mit": {
      "groupName": "Components",
      "phraseKey": "released under mit"
    },
    "components.copied": {
      "groupName": "Components",
      "phraseKey": "copied"
    },
    "main.hello_world": {
      "groupName": "Main",
      "phraseKey": "hello world"
    }
  }
}