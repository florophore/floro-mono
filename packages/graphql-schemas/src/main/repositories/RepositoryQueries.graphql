extend type Query {
  fetchRepositoryByName(ownerHandle: String, repoName: String): FetchRepositoryResponse
  fetchRepositoryById(id: ID!): FetchRepositoryResponse
}

extend type Mutation {
  createOrgRepository(
    name: String!
    organizationId: ID!
    isPrivate: Boolean!
    licenseCode: String
  ): CreateOrganizationRepositoryResponse

  createUserRepository(
    name: String!
    isPrivate: Boolean!
    licenseCode: String
  ): CreateUserRepositoryResponse

  ignoreBranch(
    repositoryId: ID!,
    branchId: ID!
  ): IgnoreBranchResponse

  changeDefaultBranch(
    repositoryId: ID!,
    branchId: ID!
  ): ChangeDefaultBranchResponse

  revertCommit(
    repositoryId: ID!,
    branchId: ID!
    sha: String!
  ): RevertCommitResponse

  autofixCommit(
    repositoryId: ID!,
    branchId: ID!
    sha: String!
  ): AutofixCommitResponse

  deleteBranch(
    repositoryId: ID!,
    branchId: ID!
  ): DeleteBranchResponse

  mergeBranch(
    repositoryId: ID!,
    branchId: ID!
  ): MergeBranchResponse
}


extend type Subscription {
  repositoryUpdated(repositoryId: ID): Repository
}