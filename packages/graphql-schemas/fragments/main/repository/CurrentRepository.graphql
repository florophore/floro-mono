fragment CurrentRepository on Repository {
  ...Repository
  organization {
    ...Organization
  }
  user {
    ...User
  }
  repoPermissions {
    canPushBranches
    canChangeSettings
  }
  branchState(branchId: $branchId) {
    branchId
    name
    branchHead
    defaultBranchId
    name
    commitsSize
    updatedAt
    isMerged
    isConflictFree

    canDelete
    canMergeDirectly
    hasOpenMergeRequest
    showMergeAndDeleteOptions
    openMergeRequest {
      id
      title
      mergeRequestCount
    }

    commitState(sha: $sha) {
      sha
      kvLink
      stateLink
      isReverted
      isValid
      isOffBranch
      message
      lastUpdatedAt
      binaryRefs {
        fileName
        url
      }
      pluginVersions {
        id
        name
        displayName
        version
        darkIcon
        lightIcon
        selectedLightIcon
        selectedDarkIcon
        manifest
        entryUrl
      }
      authorUser {
        id
        username
        firstName
        lastName
        profilePhoto {
          ...Photo
        }
      }
      user {
        id
        username
        firstName
        lastName
        profilePhoto {
          ...Photo
        }
      }
    }
  }
  repoBranches {
    id
    name
    lastCommit
    baseBranchId
    createdBy
    createdByUsername
    createdAt
    updatedAt
  }
  openUserBranchesWithoutMergeRequestsCount
  openUserBranchesWithoutMergeRequests {
    id
    name
    baseBranchId
    updatedAt
    createdBy
    createdByUsername
    lastCommit
  }
  openUserMergeRequestsCount
}